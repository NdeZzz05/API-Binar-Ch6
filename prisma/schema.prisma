// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id              String    @id @default(uuid())
  email           String    @unique
  username        String    @unique
  password        String
  profile_picture String?
  role            Role      @default(USER)
  posts           Post[]
  comments        Comment[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Post {
  id            String    @id @default(uuid())
  title         String
  content       String
  post_picture  String
  comments      Comment[]
  author_id     String
  author        User     @relation(fields: [author_id], references: [id], onDelete: Cascade)
  category_id   String
  category      Category @relation(fields: [category_id], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Comment {
  id            String    @id @default(uuid())
  content       String
  post_id       String
  post          Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)
  author_id     String
  author        User     @relation(fields: [author_id], references: [id], onDelete: Cascade)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Category{
  id            String    @id @default(uuid())
  name          String
  posts         Post[]
}

enum Role{
  USER
  ADMIN
}